@model WebEpione.Models.EventViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()

    <div class="bg_color_2">
        <div class="container margin_60_35">
            <div id="register">
                <h1>put your day off</h1>
                <div class="row justify-content-center">
                    <div class="col-md-5">
                            <div class="box_form">
                                 <div class="form-group">
                                  @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                 <div class="col-md-10">
                                 @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                 @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                 </div>
                           </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "from-control datepicker", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "from-control datepicker", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
                                    </div>
                                </div>






                              
                                <div class="form-group text-center add_top_30">
                                    <input class="btn_1" type="submit" value="Create">
                                </div>
                            </div>
                    </div>
                </div>
                </div>
                }
                <!-- /row -->
            </div>
            <!-- /register -->
        </div>
    



















































@*



            <h2>Create</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>EventViewModel</h4>
                    <hr />


                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "from-control datepicker" , type="date" } })
                            @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "from-control datepicker", type = "date" } })
                            @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
                        </div>
                    </div>







                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

*@

    }