@using WebEpione.Models
@model WebEpione.Models.StepViewModel


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="breadcrumb">
    <div class="container">
        <ul>
            <li><a href="#">Home</a></li>
            <li>Patient profile</li>

        </ul>
    </div>
</div>
<!-- /breadcrumb -->
@Html.Action("UserByIdInformations", "Home", new { id = TempData["idPatient"] })




<div class="col-xl-9 col-lg-8">

    <div class="tabs_styled_2">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" href=@Url.Action("Details", "Treatment", new { id = TempData["idTreatment"] })>Treatments</a>
            </li>
            <li class="nav-item">
                <a class="nav-link " href=@Url.Action("Create", "Step",new { id = TempData["idTreatment"] })><i class="pe-7s-plus"></i>New Step</a>
            </li>
           
        </ul>
        <!--/nav-tabs -->

        <div class="tab-content">

            <div class="tab-pane fade show active" id="book" role="tabpanel" aria-labelledby="book-tab">
                <p class="lead add_bottom_30">This is all the treatments that this patient is following.</p>

                <div class="main_title_3">
                    <h3>Step details in @ViewBag.illness</h3>
                </div>
                <div class="form-group add_bottom_45">



                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                
                            <div class="form-group">
                                @Html.LabelFor(model => model.StepSpeciality, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StepSpeciality, new { htmlAttributes = new { @class = "form-control", disabled="disabled" } })
                                    @Html.ValidationMessageFor(model => model.StepSpeciality, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.StepDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StepDescription, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.StepDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StepDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StepDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.StepDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Validation, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Validation, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Validation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NbModifications, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NbModifications, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.NbModifications, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastModificationBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LastModificationBy, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.LastModificationBy, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastModificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LastModificationDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.LastModificationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ModificationReason, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ModificationReason, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.ModificationReason, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TreatmentIllness, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TreatmentIllness, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.TreatmentIllness, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Appointment, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Appointment, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Appointment, "", new { @class = "text-danger" })
                                </div>
                                
                            </div>
                            <div class="form-group" align="right">
                                @if (Model.Validation == "Valid")
                                {
                                    <input type="button" class="btn btn-default" value="Modify this step" onclick="THEFUNCTION()" disabled>

                                }
                                else
                                {
                                <input type="button" class="btn btn-default" value="Modify this step" onclick = "THEFUNCTION()">
                                }
                            </div>


                            <!--Modification div-->
                            <div id="Modification" style="display:none" >
                                <div class="main_title_3">
                                <h3>Modification of the step</h3>
                                    </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewStepSpeciality, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NewStepSpeciality, new SelectList(Enum.GetValues(typeof(Speciality))),
                                          new { @class = "form-control" })                                       
                                         @Html.ValidationMessageFor(model => model.NewStepSpeciality, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewStepDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NewStepDescription, new { htmlAttributes = new { @class = "form-control"} })
                                        @Html.ValidationMessageFor(model => model.NewStepDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewStepDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.NewStepDate,
                             new { @class = "form-control", type = "date" })
                                         @Html.ValidationMessageFor(model => model.NewStepDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewValidation, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NewValidation, new SelectList(Enum.GetValues(typeof(ValidationType))),
                                          new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NewValidation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModificationReason, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NewModificationReason, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NewModificationReason, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="form-group" >
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                                </div>
                            </div>
                        </div>
                   

                    <div>
                        <a href=@Url.Action("Details", "Treatment", new { id = Model.TreatmentId } )>Back to list</a>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div><!--JavaScript-->
<script type="text/javascript">
                                function THEFUNCTION() {
                                    var DivModif = document.getElementById('Modification');
                                  
                                       DivModif.style.display = ''; 
                                        

                                    
                                }
</script>


   
    